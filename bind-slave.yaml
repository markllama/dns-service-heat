heat_template_version: 2016-10-14

description:
  An instance for a DNS slave server
  The instances are created with Heat and then configured with Ansible

parameters:

  # Networks to connect to or create
  external_network:
    type: string
    description: >
      The external network that provides floating IP addresses for the nodes
    constraints:
    - custom_constraint: neutron.network

  service_network:
    description: >
      The name or ID of the internal network
    type: string
    constraints:
    - custom_constraint: neutron.network

  service_subnet:
    description: >
      The name or ID of the internal IPv4 space
    type: string
    constraints:
    - custom_constraint: neutron.subnet
      
  image:
    description: >
      The Glance image to use as a base for DNS servers
    type: string
    constraints:
      - custom_constraint: glance.image
      
  flavor:
    description: >
      The name of the OpenStack instance flavor to use for DNS servers
    type: string
    default: m1.small    
    constraints:
      - custom_constraint: nova.flavor

  hostname:
    description: >
      The Infrastructure hostname portion of the FQDN
    type: string
    constraints:
    - allowed_pattern: '[a-z0-9\-]*'
      description: Hostname must contain only characters [a-z0-9\-].

  domain_name:
    description: >
      All VMs will be placed in this domain
    type: string

  # Access to the VMs
  ssh_user:
    type: string
    description: >
      The SSH user available on all nodes.

  ssh_key_name:
    type: string
    description: Name of the SSH keypair registered with Nova
    constraints:
    - custom_constraint: nova.keypair

  slave_security_group:
    description: >
      Define network access to DNS slave servers
      ICMP, SSH, and DNS (TCP and UDP) allowed
    type: string
    constraints:
      - custom_constraint: neutron.security_group

  slave_server_group:
    description: >
      ID of a server group containing all of the slave hosts
    type: string

resources:

  # A VM to provide host based orchestration and other sub-services
  slave_server:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: "HOST.DOMAIN"
          params:
            HOST: {get_param: hostname}
            DOMAIN: {get_param: domain_name}
      admin_user: {get_param: ssh_user}
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: ssh_key_name}
      networks:
      - port: {get_resource: port}
      scheduler_hints:
        group: {get_param: slave_server_group}
#      user_data_format: SOFTWARE_CONFIG
#      user_data: {get_resource: init}

  port:
    type: OS::Neutron::Port
    properties:
      security_groups:
      - {get_param: slave_security_group}
      network: {get_param: service_network}
      fixed_ips:
      - subnet: {get_param: service_subnet}
      replacement_policy: AUTO

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: external_network}
      port_id: {get_resource: port}

